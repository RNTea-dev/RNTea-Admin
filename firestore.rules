rules_version = '2';

service cloud.firestore {
  match /databases/{db}/documents {

    /* ---------------- Helpers ---------------- */
    // Allow only a "like" style update from non-auth users:
    // - text/status/hospitalId/doctorId/createdAt unchanged
    // - likeCount increments by exactly 1 OR likers list appends exactly one
    function isLikeOnlyUpdate() {
      return
        request.resource.data.text == resource.data.text &&
        request.resource.data.status == resource.data.status &&
        request.resource.data.hospitalId == resource.data.hospitalId &&
        request.resource.data.doctorId == resource.data.doctorId &&
        request.resource.data.createdAt == resource.data.createdAt &&
        (
          (
            ('likeCount' in resource.data) && ('likeCount' in request.resource.data) &&
            request.resource.data.likeCount == resource.data.likeCount + 1
          ) ||
          (
            !('likeCount' in resource.data) && ('likeCount' in request.resource.data) &&
            request.resource.data.likeCount == 1
          ) ||
          (
            ('likers' in resource.data) && ('likers' in request.resource.data) &&
            request.resource.data.likers is list &&
            resource.data.likers is list &&
            request.resource.data.likers.size() == resource.data.likers.size() + 1 &&
            request.resource.data.likers.hasAll(resource.data.likers)
          ) ||
          (
            !('likers' in resource.data) && ('likers' in request.resource.data) &&
            request.resource.data.likers is list &&
            request.resource.data.likers.size() == 1
          )
        );
    }

    /* ---------------- Posts (top-level or nested) ---------------- */
    match /{path=**}/posts/{postId} {
      allow read: if true;

      // Anyone can create a post with non-empty text (<= 20k chars)
      allow create: if request.resource.data.text is string
                 && request.resource.data.text.size() > 0
                 && request.resource.data.text.size() <= 20000;

      // Like-only updates allowed to anyone; other updates require auth
      allow update: if isLikeOnlyUpdate() || request.auth != null;

      // Deletes restricted to signed-in users (your UI gates to admin email)
      allow delete: if request.auth != null;

      // Likes subcollection (optional)
      match /likes/{likeId} {
        allow read: if true;
        allow create: if true;              // allow public "like"
        allow update, delete: if request.auth != null;
      }

      // Comments subcollection (optional)
      match /comments/{commentId} {
        allow read: if true;
        allow create: if true;              // allow public comments
        allow update, delete: if request.auth != null;
      }
    }

    /* ---------------- Reviews (if you keep this name) ---------------- */
    match /{path=**}/reviews/{reviewId} {
      allow read: if true;

      allow create: if request.resource.data.text is string
                 && request.resource.data.text.size() > 0
                 && request.resource.data.text.size() <= 20000;

      allow update: if isLikeOnlyUpdate() || request.auth != null;
      allow delete: if request.auth != null;

      match /likes/{likeId} {
        allow read: if true;
        allow create: if true;
        allow update, delete: if request.auth != null;
      }

      match /comments/{commentId} {
        allow read: if true;
        allow create: if true;
        allow update, delete: if request.auth != null;
      }
    }

    /* ---------------- Hospitals & Doctors ---------------- */
    // Open READS anywhere so collectionGroup('hospitals'/'doctors') works
    match /{path=**}/hospitals/{hospitalId} {
      allow read: if true;

      // Writes to canonical locations require auth (admin gated in your UI)
      allow create, update, delete: if request.auth != null;

      match /doctors/{doctorId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null;
      }
    }

    // Also allow reads for any stray doctors collections (belt & suspenders)
    match /{path=**}/doctors/{doctorId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }

    /* ---------------- Activity log (legacy) ---------------- */
    match /activity_logs/{logId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null;
    }

    /* ---------------- Events (append-only tracking stream) ---------------- */
    match /events/{eventId} {
      // Choose visibility: auth-only or public. Using auth-only here:
      allow read: if request.auth != null;
      allow create: if true;            // log even for signed-out actions
      allow update, delete: if false;   // append-only
    }

    /* ---------------- App Config ---------------- */
    match /config/app {
      allow read: if true;
      allow write: if request.auth != null;
    }

    /* ---------------- Default deny ---------------- */
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
